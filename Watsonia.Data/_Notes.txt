THINGS TO WORK ON:

Allow properties to be abstract as well as virtual (specifically for IsValid and ValidationErrors)?
Undo and redo functionality
Build the parent-child mapping when creating an item to check whether it needs a reference to its parent
	This should also fix up problems with Include mappings
Separate out the mandatory ShouldMapProperty functionality from the overridable
	E.g. properties MUST be virtual and collections MUST be an interface but the user may want to filter further
Have better error messages
	When a standard overridden property is of the wrong type or access e.g. if HasChanges only has a getter
	When calling Select.And without Select.Where
Test using Guids for IDs
Add async support
Add an SQLite implementation
Really have to tidy up the mess I've made of the LINQ stuff
Add a query result cache a la EntityFramework.Extended
Fix up the documentation
Performance improvements!
	Should we use the type-specific methods (GetInt32 etc) in SetValuesFromReader?
	Should we have SetValue(propertyName) methods instead of using reflection?
LoadedCollections and LoadedItems should actually be a collection of collections and items, rather than (or as well as) names
	Should expose a yield method that recurses through the loaded children of an item
Build the assembly as a PCL
Put it up on NuGet

THINGS THAT WOULD BE AWESOME:

Add a second level cache
Add a PostgreSQL implementation
Add a MongoDB implementation
Add syncing functionality for multiple databases
